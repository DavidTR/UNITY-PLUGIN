/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
//#include <string>
/* Header for class orbotix_unity_UnityConnectionMessageDispatcher */

#ifndef _Included_orbotix_unity_UnityConnectionMessageDispatcher
#define _Included_orbotix_unity_UnityConnectionMessageDispatcher
#ifdef __cplusplus
extern "C" {
#endif

typedef void (*ReceiveDeviceMessageCallback)(const char *);
ReceiveDeviceMessageCallback unityMessageCallback;

  /*
   * Class:     orbotix_achievement_AchievementManager
   * Method:    _RegisterRecieveDeviceMessageCallback
   * Signature: ()V
   */
void _RegisterRecieveDeviceMessageCallback(ReceiveDeviceMessageCallback callback);

/*
 * Class:     orbotix_achievement_AchievementManager
 * Method:    testCallback
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_orbotix_unity_UnityConnectionMessageDispatcher_handleDataStreaming
  (JNIEnv *, jobject, jstring);

///*
// * Class:     orbotix_achievement_AchievementManager
// * Method:    recordAchievementEvent
// * Signature: (Ljava/lang/String;I)V
// */
//JNIEXPORT void JNICALL Java_orbotix_achievement_AchievementManager_recordAchievementEvent
//  (JNIEnv *, jobject, jstring, jint);
//
///*
// * Class:     orbotix_achievement_AchievementManager
// * Method:    getAchievementEventCount
// * Signature: (Ljava/lang/String;)I
// */
//JNIEXPORT jint JNICALL Java_orbotix_achievement_AchievementManager_getAchievementEventCount
//    (JNIEnv *, jobject, jstring);
//
///*
// * Class:     orbotix_achievement_AchievementManager
// * Method:    reportWSCallLoaded
// * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
// */
//JNIEXPORT void JNICALL Java_orbotix_achievement_AchievementManager_reportWSCallLoaded
//  (JNIEnv *, jobject, jstring, jstring, jstring, jstring, jint);
//
///*
// * Class:     orbotix_achievement_AchievementManager
// * Method:    recordColorChange
// * Signature: (FFF)V
// */
//JNIEXPORT void JNICALL Java_orbotix_achievement_AchievementManager_recordColorChange
//  (JNIEnv *, jobject, jstring);
//
///*
// * Class:     orbotix_achievement_AchievementManager
// * Method:    recordBoost
// * Signature: (F)V
// */
//JNIEXPORT void JNICALL Java_orbotix_achievement_AchievementManager_recordBoost
//  (JNIEnv *, jobject, jstring);
//
///*
// * Class:     orbotix_achievement_AchievementManager
// * Method:    recordDriveTime
// * Signature: (F)V
// */
//JNIEXPORT void JNICALL Java_orbotix_achievement_AchievementManager_recordDriveTime
//  (JNIEnv *, jobject, jstring);
//
///*
// * Class:     orbotix_achievement_AchievementManager
// * Method:    recordDriveDistance
// * Signature: (F)V
// */
//JNIEXPORT void JNICALL Java_orbotix_achievement_AchievementManager_recordDriveDistance
//  (JNIEnv *, jobject, jstring);
//
///*
// * Class:     orbotix_achievement_AchievementManager
// * Method:    recordCollision
// * Signature: (F)V
// */
//JNIEXPORT void JNICALL Java_orbotix_achievement_AchievementManager_recordCollision
//  (JNIEnv *, jobject, jstring);
//
///*
// * Class:     orbotix_achievement_AchievementManager
// * Method:    recordMacro
// * Signature: (F)V
// */
//JNIEXPORT void JNICALL Java_orbotix_achievement_AchievementManager_recordMacro
//  (JNIEnv *, jobject, jstring);
//
///*
// * Class:     orbotix_achievement_AchievementManager
// * Method:    setRobotAddress
// * Signature: (Ljava/lang/String;Ljava/lang/String;)V
// */
//JNIEXPORT void JNICALL Java_orbotix_achievement_AchievementManager_setRobotAddress
//  (JNIEnv *, jobject, jstring, jstring);
//
//JNIEXPORT void JNICALL Java_orbotix_achievement_AchievementManager_setOAuth
//  (JNIEnv *, jobject, jstring);
//
//JNIEXPORT void JNICALL Java_orbotix_achievement_AchievementManager_updateRobotName
//  (JNIEnv *, jobject);
//
//std::string getUUIDFromJava();
//
//void makeWSCall(std::string location, std::string payload, std::string method, std::string identifier, std::string header);
//
//void reportEarnedAchievement(std::string jsonachievement);
//
//void gotNewSpheroName(std::string spheroName);

#ifdef __cplusplus
}
#endif
#endif